@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<nav class="navbar navbar-expand-lg navbar-light">
    <div class="container">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                @if (SignInManager.IsSignedIn(User))
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index">Hi @User.Identity?.Name!</a>
                    </li>
                    <li class="nav-item">
                        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" method="post">
                            <button type="submit" class="btn btn-outline-secondary">Logging out</button>
                        </form>
                    </li>
                }
                else
                {
                    @if (!UserManager.GetUsersInRoleAsync("Administrator").Result.Any())
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
                        </li>
                    }

                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>
