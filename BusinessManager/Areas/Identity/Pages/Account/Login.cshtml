@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<div class="row mt-5 justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h2 class="card-title mb-4">Login</h2>
                <form id="account" asp-route-returnUrl="/Home/Index" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" id="email" placeholder="Email" />
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" type="password" id="password" placeholder="Password" />
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>
                    <div class="mb-3 form-check">
                        <input asp-for="Input.RememberMe" class="form-check-input" id="rememberMe" />
                        <label class="form-check-label" for="rememberMe">@Html.DisplayNameFor(m => m.Input.RememberMe)</label>
                    </div>
                    <button id="login-submit" type="submit" class="btn btn-primary w-100">Log in</button>
                </form>
                <div class="mt-3">
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Forgot password?</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                @{
                    var hasExternalLogins = Model.ExternalLogins?.Count > 0;
                }

                <h3 class="card-title">Use another service to log in.</h3>
                <hr />
                @if (!hasExternalLogins)
                {
                    <div class="text-center">
                        <div class="fb-login-button" data-width="200" data-size="large" data-button-type="continue_with" data-layout="rounded" data-auto-logout-link="false" data-use-continue-as="false"></div>
                    </div>
                    <div class="text-center mt-3">
                        <button class="btn btn-google" onclick="signInWithGoogle()">
                            <img src="path_to_google_icon.svg" alt="Google" /> Log in with Google
                        </button>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="/Employee/Index" method="post">
                        <div class="text-center">
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary mb-3" name="provider" value="@provider.Name">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    // Skrypty Facebooka i Google
    function signInWithGoogle() {
        // Tutaj możesz dodać kod do obsługi logowania za pomocą Google
    }

    function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        if (response.status === 'connected') {
            testAPI();
        } else {
            document.getElementById('status').innerHTML = 'Please log into this webpage.';
        }
    }

    function checkLoginState() {
        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    }

    window.fbAsyncInit = function () {
        FB.init({
            appId: '337488545915348',
            cookie: true,
            xfbml: true,
            version: 'v18.0'
        });

        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    };

    function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function (response) {
            console.log('Successful login for: ' + response.name);
            document.getElementById('status').innerHTML =
                'Thanks for logging in, ' + response.name + '!';
        });

        function onSignIn(googleUser) {
            var profile = googleUser.getBasicProfile();
            console.log('ID: ' + profile.getId());
            console.log('Name: ' + profile.getName());
            console.log('Image URL: ' + profile.getImageUrl());
            console.log('Email: ' + profile.getEmail());
        }
    }
</script>
<div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/pl_PL/sdk.js#xfbml=1&version=v18.0&appId=337488545915348" nonce="VUc45NiZ"></script>
<style>
    .card {
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .card-title {
        font-size: 24px;
        font-weight: bold;
    }

    .btn-google {
        background-color: #4285F4;
        color: #fff;
        border: none;
    }

        .btn-google img {
            width: 20px;
            height: 20px;
            margin-right: 10px;
        }

    .form-check-label {
        padding-left: 25px;
    }
</style>